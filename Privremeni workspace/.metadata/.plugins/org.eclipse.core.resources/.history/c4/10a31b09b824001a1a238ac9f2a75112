package rs.ac.uns.ftn.db.jdbc.pozoriste.dao.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import rs.ac.uns.ftn.db.jdbc.pozoriste.dao.PredstavaDAO;
import rs.ac.uns.ftn.db.jdbc.pozoriste.dao.PrikazivanjeDAO;
import rs.ac.uns.ftn.db.jdbc.pozoriste.dto.PredstavaDTO;
import rs.ac.uns.ftn.db.jdbc.pozoriste.dto.PrikazivanjeDTO;
import rs.ac.uns.ftn.db.jdbc.pozoriste.dto.PrikazivanjeScenaDTO;
import rs.ac.uns.ftn.db.jdbc.pozoriste.model.Pozoriste;
import rs.ac.uns.ftn.db.jdbc.pozoriste.model.Prikazivanje;

public class PredstavaDAOImpl implements PredstavaDAO {

	@Override
	public int count() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void delete(Pozoriste entity) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void deleteAll() throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void deleteById(Integer id) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean existsById(Integer id) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterable<Pozoriste> findAll() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Iterable<Pozoriste> findAllById(Iterable<Integer> ids) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Pozoriste findById(Integer id) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void save(Pozoriste entity) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void saveAll(Iterable<Pozoriste> entities) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public List<PredstavaDTO> najveciProsecanBrGledalaca() throws SQLException {
		List<PredstavaDTO> result = new ArrayList<PredstavaDTO>();
		String query = "select p.idpred, p.nazivpred, avg(pr.brojgled)\r\n" + 
				"from predstava p, prikazivanje pr\r\n" + 
				"where p.idpred = pr.predstava_idpred\r\n" + 
				"group by  p.idpred, p.nazivpred";
		
		try(Connection connection = Co){
			
		}
		
		
	}

	

}
